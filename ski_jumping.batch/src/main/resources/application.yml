#second, minute, hour, day of month, month, day(s) of week
skijumping:
  settings:
    host: ${SETTINGS_HOST:https://www.fis-ski.com/DB/ski-jumping/calendar-results.html?seasoncode=%s&seasonmonth=%02d-%s}
    eventHost: ${SETTINGS_EVENT_HOST:https://www.fis-ski.com/DB/general/event-details.html?sectorcode=JP&eventid=%s&seasoncode=%s}
    jumpResultHost: ${JUMP_RESULT_HOST:https://www.fis-ski.com/DB/general/results.html?sectorcode=JP&raceid=%s}
    directory: ${DIRECTORY:tmp}
    numberOfPreviousMonth: ${NUMBER_OF_PREVIOUSE_MONTH_TO_DOWNLOAD:10}
    skiJumperDataHost: ${SKI_JUMPER_DATA_HOST:https://www.fis-ski.com/DB/general/athlete-biography.html?sectorcode=jp&competitorid=%s&type=result}
    scheduler:
      importData:
        cron: ${IMPORT_DATA_CRON:0 0/30 * * * *}
        enable: ${IMPORT_DATA_CRON_ENABLE:true}
  rabbitmq:
    exchange: ${RABBITMQ_EXCHANGE:SkiJumping}
    queues:
      sourceImportEventListener: ${SKI_JUMPING_SOURCE_IMPORT_EVENT_LISTENER:sourceImportEventListener}
      importEventIdListener: ${SKI_JUMPING_IMPORT_EVENT_ID_LISTENER:importEventIdListener}
      importDataRaceEventListener: ${SKI_JUMPING_IMPORT_DATA_RACE_EVENT_LISTENER:importDataRaceEventListener}
      importPlaceEventListener: ${SKI_JUMPING_IMPORT_PLACE_EVENT_LISTENER:importPlaceEventListener}
      importJumpResultEventListener: ${SKI_JUMPING_IMPORT_JUMP_RESULT_EVENT_LISTENER:importJumpResultEventListener}
      importJumpResultTeamEventListener: ${SKI_JUMPING_IMPORT_JUMP_RESULT_TEAM_EVENT_LISTENER:importJumpResultTeamEventListener}
      importSkiJumperDataListener: ${IMPORT_SKI_JUMPER_DATA_LISTENER:importSkiJumperDataListener}

spring:
  profiles:
    active: ${DEV_PROFILE:dev}
  jpa:
    hibernate:
      ddl-auto: ${hibernate.ddl-auto:none}
  datasource:
    url: ${URL:jdbc:mysql://${DB_HOST:mariadb}:${PORT:3306}/${DATABASE:skijumper}?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC}
    username: ${DB_USER:root}
    password: ${DB_PASSWORD:rootPassword}
  batch:
    job:
      enabled: ${BATCH_JOB_ENABLE:true}
  rabbitmq:
    host: ${RABBITMQ_HOST:rabbitmq}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    listener:
      simple:
        default-requeue-rejected: false
